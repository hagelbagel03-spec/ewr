{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":46,"index":125}}],"key":"7dk3JQGwGYesJt8OOG3pkBz+dtE=","exportNames":["*"]}},{"name":"./Font.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":43,"index":169}}],"key":"iwvcxaVgfIXdww6iPrKSgtcaZy8=","exportNames":["*"]}},{"name":"./FontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":170},"end":{"line":4,"column":70,"index":240}}],"key":"ubgLNxOkixzH8pVapAwap9wQ8XU=","exportNames":["*"]}},{"name":"./memory","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":241},"end":{"line":5,"column":124,"index":365}}],"key":"wlrMBDc1MVhnZOig0xhYu83J328=","exportNames":["*"]}},{"name":"./server","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":366},"end":{"line":6,"column":46,"index":412}}],"key":"QinwpQMs5c8GY+myVdgXEzx55Tw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){var n=r(d[0]);Object.defineProperty(e,\"__esModule\",{value:!0}),Object.defineProperty(e,\"FontDisplay\",{enumerable:!0,get:function(){return s.FontDisplay}}),e.getLoadedFonts=function(){return t.default.getLoadedFonts()},e.isLoaded=c,e.isLoading=function(n){return n in l.loadPromises},e.loadAsync=function(n,t){if('object'==typeof n){if(t)return Promise.reject(new o.CodedError(\"ERR_FONT_API\",`No fontFamily can be used for the provided source: ${t}. The second argument of \\`loadAsync()\\` can only be used with a \\`string\\` value as the first argument.`));const s=n,l=Object.keys(s);return l.map(n=>(0,u.registerStaticFont)(n,s[n])),Promise.resolve()}return(0,u.registerStaticFont)(n,t),Promise.resolve()},e.unloadAllAsync=async function(){if(!t.default.unloadAllAsync)throw new o.UnavailabilityError('expo-font','unloadAllAsync');if(Object.keys(l.loadPromises).length)throw new o.CodedError(\"ERR_UNLOAD\",`Cannot unload fonts while they're still loading: ${Object.keys(l.loadPromises).join(', ')}`);(0,l.purgeCache)(),await t.default.unloadAllAsync()},e.unloadAsync=async function(n,s){if(!t.default.unloadAsync)throw new o.UnavailabilityError('expo-font','unloadAsync');if('object'==typeof n){if(s)throw new o.CodedError(\"ERR_FONT_API\",`No fontFamily can be used for the provided options: ${s}. The second argument of \\`unloadAsync()\\` can only be used with a \\`string\\` value as the first argument.`);const t=n,l=Object.keys(t);return void await Promise.all(l.map(n=>f(n,t[n])))}return await f(n,s)};var o=r(d[1]),t=n(r(d[2])),s=r(d[3]),l=(r(d[4]),r(d[5])),u=r(d[6]);function c(n){return(0,l.isLoadedInCache)(n)||!!t.default.isLoaded(n)}async function f(n,s){if(c(n)){if((0,l.purgeFontFamilyFromCache)(n),!n)throw new o.CodedError(\"ERR_FONT_FAMILY\",\"Cannot unload an empty name\");await t.default.unloadAsync(n,s)}}});","lineCount":1,"map":[[1,200,26,7],[1,211,27,4],[1,218,27,11,"ExpoFontLoader"],[1,228,27,26,"getLoadedFonts"],[1,244,28,0],[1,246],[1,271,36,7],[1,280,36,26,"fontFamily"],[1,283,37,4],[1,290,37,11,"fontFamily"],[1,295,37,25,"loadPromises"],[1,309,38,0],[1,311],[1,323,54,7],[1,332,54,26,"fontFamilyOrFontMap"],[1,334,54,47,"source"],[1,337,59,4],[1,340,59,39],[1,357,59,15,"fontFamilyOrFontMap"],[1,359,59,49],[1,360,60,8],[1,363,60,12,"source"],[1,365,61,12],[1,372,61,19,"Promise"],[1,380,61,27,"reject"],[1,387,61,34],[1,391,61,38,"CodedError"],[1,404,61,49],[1,419,61,65],[1,473,61,119,"source"],[1,583,63,8],[1,589,63,14,"fontMap"],[1,591,63,24,"fontFamilyOrFontMap"],[1,593,64,14,"names"],[1,595,64,22,"Object"],[1,602,64,29,"keys"],[1,607,64,34,"fontMap"],[1,610,67,12],[1,617,66,12,"names"],[1,619,66,18,"map"],[1,623,66,23,"name"],[1,627,66,32],[1,629,66,32,"registerStaticFont"],[1,651,66,51,"name"],[1,653,66,57,"fontMap"],[1,655,66,65,"name"],[1,660,67,19,"Promise"],[1,668,67,27,"resolve"],[1,677,70,4],[1,678,73,8],[1,685,72,8],[1,687,72,8,"registerStaticFont"],[1,709,72,27,"fontFamilyOrFontMap"],[1,711,72,48,"source"],[1,714,73,15,"Promise"],[1,722,73,23,"resolve"],[1,731,76,0],[1,733],[1,750,110,7,"async"],[1,767,111,4],[1,771,111,9,"ExpoFontLoader"],[1,781,111,24,"unloadAllAsync"],[1,796,112,8],[1,802,112,14],[1,806,112,18,"UnavailabilityError"],[1,828,112,38],[1,840,112,51],[1,858,114,4],[1,861,114,8,"Object"],[1,868,114,15,"keys"],[1,873,114,20,"loadPromises"],[1,889,114,34,"length"],[1,896,115,8],[1,902,115,14],[1,906,115,18,"CodedError"],[1,919,115,29],[1,932,115,43],[1,984,115,95,"Object"],[1,991,115,102,"keys"],[1,996,115,107,"loadPromises"],[1,1012,115,121,"join"],[1,1017,115,126],[1,1027,117,4],[1,1029,117,4,"purgeCache"],[1,1051,118,10,"ExpoFontLoader"],[1,1061,118,25,"unloadAllAsync"],[1,1077,119,0],[1,1079],[1,1093,130,7,"async"],[1,1108,130,34,"fontFamilyOrFontMap"],[1,1110,130,55,"options"],[1,1113,131,4],[1,1117,131,9,"ExpoFontLoader"],[1,1127,131,24,"unloadAsync"],[1,1139,132,8],[1,1145,132,14],[1,1149,132,18,"UnavailabilityError"],[1,1171,132,38],[1,1183,132,51],[1,1198,134,4],[1,1201,134,39],[1,1218,134,15,"fontFamilyOrFontMap"],[1,1220,134,49],[1,1221,135,8],[1,1224,135,12,"options"],[1,1226,136,12],[1,1232,136,18],[1,1236,136,22,"CodedError"],[1,1249,136,33],[1,1264,136,49],[1,1319,136,104,"options"],[1,1430,138,8],[1,1436,138,14,"fontMap"],[1,1438,138,24,"fontFamilyOrFontMap"],[1,1440,139,14,"names"],[1,1442,139,22,"Object"],[1,1449,139,29,"keys"],[1,1454,139,34,"fontMap"],[1,1457,141,8],[1,1475,140,14,"Promise"],[1,1483,140,22,"all"],[1,1487,140,26,"names"],[1,1489,140,32,"map"],[1,1493,140,37,"name"],[1,1496,140,46,"unloadFontInNamespaceAsync"],[1,1498,140,73,"name"],[1,1500,140,79,"fontMap"],[1,1502,140,87,"name"],[1,1507,142,4],[1,1508,143,4],[1,1521,143,17,"unloadFontInNamespaceAsync"],[1,1523,143,44,"fontFamilyOrFontMap"],[1,1525,143,65,"options"],[1,1527,144,0],[1,1529,1,0],[1,1533,1,0,"_expoModulesCore"],[1,1535,1,0,"r"],[1,1537,1,0,"d"],[1,1539,1,0],[1,1543,2,0,"_ExpoFontLoader"],[1,1545,2,0,"_interopRequireDefault"],[1,1547,2,0,"r"],[1,1549,2,0,"d"],[1,1551,2,0],[1,1556,3,0,"_Font"],[1,1558,3,0,"r"],[1,1560,3,0,"d"],[1,1562,3,0],[1,1566,5,0,"_memory"],[1,1569,4,0,"r"],[1,1571,4,0,"d"],[1,1573,4,0],[1,1577,5,0,"r"],[1,1579,5,0,"d"],[1,1581,5,0],[1,1586,6,0,"_server"],[1,1588,6,0,"r"],[1,1590,6,0,"d"],[1,1592,6,0],[1,1596,14,7],[1,1605,14,16,"isLoaded"],[1,1607,14,25,"fontFamily"],[1,1610,16,8],[1,1617,16,15],[1,1619,16,15,"isLoadedInCache"],[1,1638,16,31,"fontFamily"],[1,1644,16,48,"ExpoFontLoader"],[1,1654,16,63,"isLoaded"],[1,1663,16,72,"fontFamily"],[1,1665,19,0],[1,1666,145,0,"async"],[1,1681,145,15,"unloadFontInNamespaceAsync"],[1,1683,145,42,"fontFamily"],[1,1685,145,54,"options"],[1,1688,146,4],[1,1691,146,9,"isLoaded"],[1,1693,146,18,"fontFamily"],[1,1696,146,4],[1,1697,156,4],[1,1701,150,8],[1,1703,150,8,"purgeFontFamilyFromCache"],[1,1731,150,33,"fontFamily"],[1,1735,156,9,"fontFamily"],[1,1737,157,8],[1,1743,157,14],[1,1747,157,18,"CodedError"],[1,1760,157,29],[1,1778,157,48],[1,1815,159,10,"ExpoFontLoader"],[1,1825,159,25,"unloadAsync"],[1,1837,159,37,"fontFamily"],[1,1839,159,49,"options"],[1,1841,151,4],[1,1842,160,0],[1,1843,160,1],[1,1846]],"functionMap":{"names":["<global>","isLoaded","getLoadedFonts","isLoading","loadAsync","names.map$argument_0","Promise.all.then$argument_0","loadFontInNamespaceAsync","<anonymous>","unloadAllAsync","unloadAsync","unloadFontInNamespaceAsync"],"mappings":"AAA;OCa;CDK;OEO;CFE;OGQ;CHE;OIgB;sBCY,iDD;qCCG,uDD,QE,SF;CJO;AOC;gCCiB;KDQ;CPE;OSM;CTS;OUW;oCLU,yDK;CVI;AWC;CXe"}},"type":"js/module"}]}