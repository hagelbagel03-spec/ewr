{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":46,"index":125}}],"key":"7dk3JQGwGYesJt8OOG3pkBz+dtE=","exportNames":["*"]}},{"name":"./Font.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":43,"index":169}}],"key":"iwvcxaVgfIXdww6iPrKSgtcaZy8=","exportNames":["*"]}},{"name":"./FontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":170},"end":{"line":4,"column":70,"index":240}}],"key":"ubgLNxOkixzH8pVapAwap9wQ8XU=","exportNames":["*"]}},{"name":"./memory","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":241},"end":{"line":5,"column":124,"index":365}}],"key":"wlrMBDc1MVhnZOig0xhYu83J328=","exportNames":["*"]}},{"name":"./server","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":366},"end":{"line":6,"column":46,"index":412}}],"key":"QinwpQMs5c8GY+myVdgXEzx55Tw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){var o=r(d[0]);Object.defineProperty(e,\"__esModule\",{value:!0}),Object.defineProperty(e,\"FontDisplay\",{enumerable:!0,get:function(){return s.FontDisplay}}),e.getLoadedFonts=function(){return t.default.getLoadedFonts()},e.isLoaded=f,e.isLoading=function(o){return o in u.loadPromises},e.loadAsync=function(o,t){const s='undefined'==typeof window;if('object'==typeof o){if(t)return Promise.reject(new n.CodedError(\"ERR_FONT_API\",`No fontFamily can be used for the provided source: ${t}. The second argument of \\`loadAsync()\\` can only be used with a \\`string\\` value as the first argument.`));const l=o,u=Object.keys(l);return s?(u.map(o=>(0,c.registerStaticFont)(o,l[o])),Promise.resolve()):Promise.all(u.map(o=>y(o,l[o]))).then(()=>{})}if(s)return(0,c.registerStaticFont)(o,t),Promise.resolve();return y(o,t)},e.unloadAllAsync=async function(){if(!t.default.unloadAllAsync)throw new n.UnavailabilityError('expo-font','unloadAllAsync');if(Object.keys(u.loadPromises).length)throw new n.CodedError(\"ERR_UNLOAD\",`Cannot unload fonts while they're still loading: ${Object.keys(u.loadPromises).join(', ')}`);(0,u.purgeCache)(),await t.default.unloadAllAsync()},e.unloadAsync=async function(o,s){if(!t.default.unloadAsync)throw new n.UnavailabilityError('expo-font','unloadAsync');if('object'==typeof o){if(s)throw new n.CodedError(\"ERR_FONT_API\",`No fontFamily can be used for the provided options: ${s}. The second argument of \\`unloadAsync()\\` can only be used with a \\`string\\` value as the first argument.`);const t=o,l=Object.keys(t);return void await Promise.all(l.map(o=>w(o,t[o])))}return await w(o,s)};var n=r(d[1]),t=o(r(d[2])),s=r(d[3]),l=r(d[4]),u=r(d[5]),c=r(d[6]);function f(o){return(0,u.isLoadedInCache)(o)||!!t.default.isLoaded(o)}async function y(o,t){if(!t)throw new n.CodedError(\"ERR_FONT_SOURCE\",`Cannot load null or undefined font source: { \"${o}\": ${t} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${o}\"`);if(f(o))return;if(u.loadPromises.hasOwnProperty(o))return u.loadPromises[o];const s=(0,l.getAssetForSource)(t);u.loadPromises[o]=(async()=>{try{await(0,l.loadSingleFontAsync)(o,s),(0,u.markLoaded)(o)}finally{delete u.loadPromises[o]}})(),await u.loadPromises[o]}async function w(o,s){if(f(o)){if((0,u.purgeFontFamilyFromCache)(o),!o)throw new n.CodedError(\"ERR_FONT_FAMILY\",\"Cannot unload an empty name\");await t.default.unloadAsync(o,s)}}});","lineCount":1,"map":[[1,200,26,7],[1,211,27,4],[1,218,27,11,"ExpoFontLoader"],[1,228,27,26,"getLoadedFonts"],[1,244,28,0],[1,246],[1,271,36,7],[1,280,36,26,"fontFamily"],[1,283,37,4],[1,290,37,11,"fontFamily"],[1,295,37,25,"loadPromises"],[1,309,38,0],[1,311],[1,323,54,7],[1,332,54,26,"fontFamilyOrFontMap"],[1,334,54,47,"source"],[1,337,58,4],[1,343,58,10,"isServer"],[1,345,58,64],[1,365,58,53,"window"],[1,372,59,4],[1,375,59,39],[1,392,59,15,"fontFamilyOrFontMap"],[1,394,59,49],[1,395,60,8],[1,398,60,12,"source"],[1,400,61,12],[1,407,61,19,"Promise"],[1,415,61,27,"reject"],[1,422,61,34],[1,426,61,38,"CodedError"],[1,439,61,49],[1,454,61,65],[1,508,61,119,"source"],[1,618,63,8],[1,624,63,14,"fontMap"],[1,626,63,24,"fontFamilyOrFontMap"],[1,628,64,14,"names"],[1,630,64,22,"Object"],[1,637,64,29,"keys"],[1,642,64,34,"fontMap"],[1,645,65,8],[1,652,65,12,"isServer"],[1,655,66,12,"names"],[1,657,66,18,"map"],[1,661,66,23,"name"],[1,665,66,32],[1,667,66,32,"registerStaticFont"],[1,689,66,51,"name"],[1,691,66,57,"fontMap"],[1,693,66,65,"name"],[1,698,67,19,"Promise"],[1,706,67,27,"resolve"],[1,717,69,15,"Promise"],[1,725,69,23,"all"],[1,729,69,27,"names"],[1,731,69,33,"map"],[1,735,69,38,"name"],[1,738,69,47,"loadFontInNamespaceAsync"],[1,740,69,72,"name"],[1,742,69,78,"fontMap"],[1,744,69,86,"name"],[1,750,69,95,"then"],[1,755,69,100],[1,762,70,4],[1,763,71,4],[1,766,71,8,"isServer"],[1,768,73,8],[1,775,72,8],[1,777,72,8,"registerStaticFont"],[1,799,72,27,"fontFamilyOrFontMap"],[1,801,72,48,"source"],[1,804,73,15,"Promise"],[1,812,73,23,"resolve"],[1,822,75,4],[1,829,75,11,"loadFontInNamespaceAsync"],[1,831,75,36,"fontFamilyOrFontMap"],[1,833,75,57,"source"],[1,835,76,0],[1,837],[1,854,110,7,"async"],[1,871,111,4],[1,875,111,9,"ExpoFontLoader"],[1,885,111,24,"unloadAllAsync"],[1,900,112,8],[1,906,112,14],[1,910,112,18,"UnavailabilityError"],[1,932,112,38],[1,944,112,51],[1,962,114,4],[1,965,114,8,"Object"],[1,972,114,15,"keys"],[1,977,114,20,"loadPromises"],[1,993,114,34,"length"],[1,1000,115,8],[1,1006,115,14],[1,1010,115,18,"CodedError"],[1,1023,115,29],[1,1036,115,43],[1,1088,115,95,"Object"],[1,1095,115,102,"keys"],[1,1100,115,107,"loadPromises"],[1,1116,115,121,"join"],[1,1121,115,126],[1,1131,117,4],[1,1133,117,4,"purgeCache"],[1,1155,118,10,"ExpoFontLoader"],[1,1165,118,25,"unloadAllAsync"],[1,1181,119,0],[1,1183],[1,1197,130,7,"async"],[1,1212,130,34,"fontFamilyOrFontMap"],[1,1214,130,55,"options"],[1,1217,131,4],[1,1221,131,9,"ExpoFontLoader"],[1,1231,131,24,"unloadAsync"],[1,1243,132,8],[1,1249,132,14],[1,1253,132,18,"UnavailabilityError"],[1,1275,132,38],[1,1287,132,51],[1,1302,134,4],[1,1305,134,39],[1,1322,134,15,"fontFamilyOrFontMap"],[1,1324,134,49],[1,1325,135,8],[1,1328,135,12,"options"],[1,1330,136,12],[1,1336,136,18],[1,1340,136,22,"CodedError"],[1,1353,136,33],[1,1368,136,49],[1,1423,136,104,"options"],[1,1534,138,8],[1,1540,138,14,"fontMap"],[1,1542,138,24,"fontFamilyOrFontMap"],[1,1544,139,14,"names"],[1,1546,139,22,"Object"],[1,1553,139,29,"keys"],[1,1558,139,34,"fontMap"],[1,1561,141,8],[1,1579,140,14,"Promise"],[1,1587,140,22,"all"],[1,1591,140,26,"names"],[1,1593,140,32,"map"],[1,1597,140,37,"name"],[1,1600,140,46,"unloadFontInNamespaceAsync"],[1,1602,140,73,"name"],[1,1604,140,79,"fontMap"],[1,1606,140,87,"name"],[1,1611,142,4],[1,1612,143,4],[1,1625,143,17,"unloadFontInNamespaceAsync"],[1,1627,143,44,"fontFamilyOrFontMap"],[1,1629,143,65,"options"],[1,1631,144,0],[1,1633,1,0],[1,1637,1,0,"_expoModulesCore"],[1,1639,1,0,"r"],[1,1641,1,0,"d"],[1,1643,1,0],[1,1647,2,0,"_ExpoFontLoader"],[1,1649,2,0,"_interopRequireDefault"],[1,1651,2,0,"r"],[1,1653,2,0,"d"],[1,1655,2,0],[1,1660,3,0,"_Font"],[1,1662,3,0,"r"],[1,1664,3,0,"d"],[1,1666,3,0],[1,1670,4,0,"_FontLoader"],[1,1672,4,0,"r"],[1,1674,4,0,"d"],[1,1676,4,0],[1,1680,5,0,"_memory"],[1,1682,5,0,"r"],[1,1684,5,0,"d"],[1,1686,5,0],[1,1690,6,0,"_server"],[1,1692,6,0,"r"],[1,1694,6,0,"d"],[1,1696,6,0],[1,1700,14,7],[1,1709,14,16,"isLoaded"],[1,1711,14,25,"fontFamily"],[1,1714,16,8],[1,1721,16,15],[1,1723,16,15,"isLoadedInCache"],[1,1742,16,31,"fontFamily"],[1,1748,16,48,"ExpoFontLoader"],[1,1758,16,63,"isLoaded"],[1,1767,16,72,"fontFamily"],[1,1769,19,0],[1,1770,77,0,"async"],[1,1785,77,15,"loadFontInNamespaceAsync"],[1,1787,77,40,"fontFamily"],[1,1789,77,52,"source"],[1,1792,78,4],[1,1796,78,9,"source"],[1,1798,79,8],[1,1804,79,14],[1,1808,79,18,"CodedError"],[1,1821,79,29],[1,1839,79,48],[1,1888,79,97,"fontFamily"],[1,1895,79,113,"source"],[1,1966,79,189,"fontFamily"],[1,1972,83,4],[1,1975,83,8,"isLoaded"],[1,1977,83,17,"fontFamily"],[1,1980,84,8],[1,1987,86,4],[1,1990,86,8,"loadPromises"],[1,2005,86,21,"hasOwnProperty"],[1,2020,86,36,"fontFamily"],[1,2023,87,8],[1,2030,87,15,"loadPromises"],[1,2045,87,28,"fontFamily"],[1,2048,93,4],[1,2054,93,10,"asset"],[1,2057,93,18],[1,2059,93,18,"getAssetForSource"],[1,2080,93,36,"source"],[1,2083,94,4,"loadPromises"],[1,2098,94,17,"fontFamily"],[1,2101,94,31],[1,2112,95,8],[1,2122,96,18],[1,2124,96,18,"loadSingleFontAsync"],[1,2147,96,38,"fontFamily"],[1,2149,96,50,"asset"],[1,2153,97,12],[1,2155,97,12,"markLoaded"],[1,2169,97,23,"fontFamily"],[1,2171,98,8],[1,2172,98,9],[1,2187,100,19,"loadPromises"],[1,2202,100,32,"fontFamily"],[1,2204,101,8],[1,2205,102,5],[1,2207,94,31],[1,2216,103,10,"loadPromises"],[1,2231,103,23,"fontFamily"],[1,2233,104,0],[1,2234,145,0,"async"],[1,2249,145,15,"unloadFontInNamespaceAsync"],[1,2251,145,42,"fontFamily"],[1,2253,145,54,"options"],[1,2256,146,4],[1,2259,146,9,"isLoaded"],[1,2261,146,18,"fontFamily"],[1,2264,146,4],[1,2265,156,4],[1,2269,150,8],[1,2271,150,8,"purgeFontFamilyFromCache"],[1,2299,150,33,"fontFamily"],[1,2303,156,9,"fontFamily"],[1,2305,157,8],[1,2311,157,14],[1,2315,157,18,"CodedError"],[1,2328,157,29],[1,2346,157,48],[1,2383,159,10,"ExpoFontLoader"],[1,2393,159,25,"unloadAsync"],[1,2405,159,37,"fontFamily"],[1,2407,159,49,"options"],[1,2409,151,4],[1,2410,160,0],[1,2411,160,1],[1,2414]],"functionMap":{"names":["<global>","isLoaded","getLoadedFonts","isLoading","loadAsync","names.map$argument_0","Promise.all.then$argument_0","loadFontInNamespaceAsync","<anonymous>","unloadAllAsync","unloadAsync","unloadFontInNamespaceAsync"],"mappings":"AAA;OCa;CDK;OEO;CFE;OGQ;CHE;OIgB;sBCY,iDD;qCCG,uDD,QE,SF;CJO;AOC;gCCiB;KDQ;CPE;OSM;CTS;OUW;oCLU,yDK;CVI;AWC;CXe"}},"type":"js/module"}]}